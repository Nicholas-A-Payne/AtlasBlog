@using X.PagedList
@using X.PagedList.Mvc.Core
@using AtlasBlog1.Models
@using X.PagedList.Web.Common
@using AtlasBlog1.Services.Interfaces

@inject IImageService _imageService

@model IPagedList<Blog>


<!-- Main Content-->
<div class="container border-top-dark">
    <div>
        <h2 class="fw-bold text-center" >Check out all the newest posts!</h2>
        <p class="text-center">See all the newest posts from Nicholas Payne's full stack Developer Blog. From Database to C#, ASP.NET MVC, Mobile Development all the way to
            front end design, get all the tips and trick I have to offer!</p>
    </div>
    <div class="row row-cols-1 row-cols-md-3 g-4">
        <!-- Post preview-->
        @foreach (var blog in Model)
        {
            <div class="card h-100 border-dark border-start-dark">
                @if (blog.ImageData is not null)
                {
                    <img class="card-img-top img-fluid" src="@_imageService.ConvertByteArrayToFile(blog.ImageData, blog.ImageType)">
                }
                <div class="card-body">
                    <a asp-action="BlogChildIndex" asp-controller="Posts" asp-route-blogId="@blog.Id">
                        <h2 class="post-title d-flex justify-content-center text-break">@blog.BlogName</h2>
                        <hr/>
                        <p class="post-subtitle fw-bold text-break">@blog.Description</p>
                    </a>
                </div>
                <div class="card-footer">
                    <p class="post-meta">
                        Created By Nicholas Payne on @blog.Created.ToString("MMM dd, yyyy")
                    </p>
                </div>
            </div>
        }
    </div>
    <!-- Pager-->
    <div class="d-flex justify-content-center my-4"><a class="btn btn-primary text-uppercase" asp-action="Index" asp-controller="Posts" >All Posts →</a></div>
    <!-- Divider-->
    <hr class="my-4" />
    @*Now I can Start building out the paging mechanism*@
    <div class="ms-3">
        <div class="row ms-5">
            <div class="col-6 ms-5 h3 d-flex justify-content-end">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>
            <div class="col-6 ms-4 d-flex justify-content-end">
                @Html.PagedListPager(Model, pageNum => Url.Action("Index", new { pageNum }),
                new PagedListRenderOptions
                {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
                })
            </div>
        </div>
    </div>
</div>

