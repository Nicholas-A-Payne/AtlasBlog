@using Microsoft.AspNetCore.Identity

@inject UserManager<AppUser> _userManager


@model AtlasBlog1.Models.Post


@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Slug)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Abstract)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Abstract)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostState)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PostState)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Updated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Updated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.BlogName)
        </dd>
    </dl>
</div>

<hr class="border-bottom border-dark" />

@if (User.Identity!.IsAuthenticated)
{
    //Present a simple form for collecting the comment
    <div class="">
        <form asp-controller="Comments" asp-action="Create">
            <input type="hidden" asp-for="Slug">
            <input type="hidden" name="PostId" value=@Model.Id>
            <div class="container">
                <h3 class="fw-bold text-center"> Add Comment</h3>
                <div class="d-flex justify-content-center">
                    <textarea class="form-control border-bottom border-dark" name="CommentBody" rows=8 placeholder="Add Comment"></textarea>
                </div>
            </div>
            <div class="d-flex justify-content-center">
                <button class="btn btn-primary">SUBMIT</button>
            </div>
        </form>
    </div>
}
else
{
    <a class="nav-link text-dark fw-bold text-black" asp-route-returnUrl="@Url.Action("Details", "Posts", new{slug = Model.Slug})" asp-area="Identity" asp-page="/Account/Login">Please Register/Login to Leave a comment</a>
}

<hr />

<div class="container">
    <div id="CommentSection" class="row">
        @foreach (var comment in Model.Comments.OrderByDescending(c => c.UpdatedDate))
        {
            <div class="col-12 my-2">
                <div class="targetParent card border-dark mb-3 w-100">
                    <div class="card-header">
                        <span class="float-start">Author: @comment.Author?.FullName</span>
                        <span class="float-end">Created on: @comment.CreatedDate.ToString("MMM dd, yyyy")</span>
                    </div>
                    <div class="targetChild card-body text-dark">
                        <h5 class="card-title">@comment.CommentBody</h5>
                    </div>

                    @if (comment.AuthorId == _userManager.GetUserId(User))
                    {
                        <div class="card-footer">
                            <div class="row row-cols-1 row-cols-md-2 g-2">
                                <div class="col">
                                    <button class="btnModal btn btn-primary btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#editCommentModal">EDIT</button>
                                </div>
                                <div class="col">
                                    @*SweetAlert Window*@
                                    <a asp-action="Delete" asp-controller="Comments" asp-route-id="@comment.Id" class="btn btn-sm btn-dark w-100">DELETE</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>



@* Modal Section *@
<!-- Modal -->
<div class="modal fade" id="editCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <form asp-action="Edit" asp-controller="Comments">
                    <input type="hidden" name="Id" id="modalCommentId" />
                    <input type="hidden" asp-for="Slug" />

                    <div class="form-group">
                        <label class="control-label">Comment</label>
                        <textarea class="form-control" rows=10 name="CommentBody" id="modalCommentBody"></textarea>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-primary btn-outline-dark w-100 fw-bold">CONFIRM EDIT</button>
                    </div>

                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {

<script>
    document.querySelectorAll("button.btnModal").forEach(btn => {
        btn.addEventListener("click", function(){
           //Thing 1: Get the Id of the comment into the Modal
           document.getElementById('modalCommentId').value = this.getAttribute('data-commentId');
           //Thing 2: Get the CommentBody into the modal
           let parent = this.closest("div.targetParent");
           let child = parent.querySelector("div.targetChild h5");
           document.getElementById('modalCommentBody').innerText = child.innerText;
        });
    });
</script>

}




<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
